# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-07-27 12:12
from __future__ import unicode_literals

import awx.ipam.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aggregate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('family', models.PositiveSmallIntegerField(choices=[(4, 'IPv4'), (6, 'IPv6')])),
                ('prefix', awx.ipam.fields.IPNetworkField()),
                ('date_added', models.DateField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'ordering': ['family', 'prefix'],
            },
        ),
        migrations.CreateModel(
            name='Datacenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('site', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50)),
                ('facility', models.CharField(blank=True, max_length=50)),
                ('physical_address', models.CharField(blank=True, max_length=200)),
                ('shipping_address', models.CharField(blank=True, max_length=200)),
                ('contact_name', models.CharField(blank=True, max_length=50)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Contact E-mail')),
                ('comments', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('family', models.PositiveSmallIntegerField(choices=[(4, 'IPv4'), (6, 'IPv6')], editable=False)),
                ('address', awx.ipam.fields.IPAddressField(help_text='IPv4 or IPv6 address (with mask)')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Active'), (2, 'Reserved'), (3, 'Deprecated'), (5, 'DHCP')], default=1, help_text='The operational status of this IP', verbose_name='Status')),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'ordering': ['family', 'address'],
                'verbose_name': 'IP address',
                'verbose_name_plural': 'IP addresses',
            },
        ),
        migrations.CreateModel(
            name='Prefix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('family', models.PositiveSmallIntegerField(choices=[(4, 'IPv4'), (6, 'IPv6')], editable=False)),
                ('prefix', awx.ipam.fields.IPNetworkField(help_text='IPv4 or IPv6 network with mask')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Container'), (1, 'Active'), (2, 'Reserved'), (3, 'Deprecated')], default=1, help_text='Operational status of this prefix', verbose_name='Status')),
                ('is_pool', models.BooleanField(default=False, help_text='All IP addresses within this prefix are considered usable', verbose_name='Is a pool')),
                ('description', models.CharField(blank=True, max_length=100)),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefixes', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['vrf', 'family', 'prefix'],
                'verbose_name_plural': 'prefixes',
            },
        ),
        migrations.CreateModel(
            name='Rir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'RIR',
                'verbose_name_plural': 'RIRs',
            },
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('vid', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4094)], verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Active'), (2, 'Reserved'), (3, 'Deprecated')], default=1, verbose_name='Status')),
                ('description', models.CharField(blank=True, max_length=100)),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vlans', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['datacenter', 'vid'],
                'verbose_name': 'VLAN',
                'verbose_name_plural': 'VLANs',
            },
        ),
        migrations.CreateModel(
            name='Vrf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('rd', models.CharField(max_length=21, verbose_name='Route distinguisher')),
                ('enforce_unique', models.BooleanField(default=True, help_text='Prevent duplicate prefixes/IP addresses within this VRF', verbose_name='Enforce unique space')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'VRF',
                'verbose_name_plural': 'VRFs',
            },
        ),
        migrations.AddField(
            model_name='prefix',
            name='vlan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefixes', to='ipam.Vlan', verbose_name='VLAN'),
        ),
        migrations.AddField(
            model_name='prefix',
            name='vrf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefixes', to='ipam.Vrf', verbose_name='VRF'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='vrf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ip_addresses', to='ipam.Vrf', verbose_name='VRF'),
        ),
        migrations.AddField(
            model_name='aggregate',
            name='rir',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='aggregates', to='ipam.Rir', verbose_name='RIR'),
        ),
    ]
