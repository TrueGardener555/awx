# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-08-09 15:29
from __future__ import unicode_literals

import awx.ipam.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0038_auto_20180725_2143'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aggregate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('family', models.PositiveSmallIntegerField(choices=[(4, 'IPv4'), (6, 'IPv6')])),
                ('prefix', awx.ipam.fields.IPNetworkField()),
                ('date_added', models.DateField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'ordering': ['family', 'prefix'],
            },
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('token', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=200)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('scm_type', models.CharField(blank=True, choices=[('', 'Manual'), ('git', 'Git'), ('hg', 'Mercurial'), ('svn', 'Subversion'), ('insights', 'Red Hat Insights')], default='', help_text='Specifies the source control system used to store the project.', max_length=8, verbose_name='SCM Type')),
                ('scm_url', models.CharField(blank=True, default='', editable=False, help_text='The SCM Source', max_length=1024, verbose_name='SCM Source')),
                ('scm_branch', models.CharField(blank=True, default='', editable=False, help_text='The SCM Branch', max_length=1024, verbose_name='SCM Branch')),
                ('scm_revision', models.CharField(blank=True, default='', editable=False, help_text='The SCM Revision', max_length=1024, verbose_name='SCM Revision')),
                ('svc_enabled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('security', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('requirements', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('source', models.CharField(choices=[('', 'None'), ('pod', 'Kubernetes/OpenShift POD'), ('container', 'Container Apps')], default='', max_length=20)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='apps', to='main.Credential')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Backup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('token', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=200)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('scm_type', models.CharField(blank=True, choices=[('', 'Manual'), ('git', 'Git'), ('hg', 'Mercurial'), ('svn', 'Subversion'), ('insights', 'Red Hat Insights')], default='', help_text='Specifies the source control system used to store the project.', max_length=8, verbose_name='SCM Type')),
                ('scm_url', models.CharField(blank=True, default='', editable=False, help_text='The SCM Source', max_length=1024, verbose_name='SCM Source')),
                ('scm_branch', models.CharField(blank=True, default='', editable=False, help_text='The SCM Branch', max_length=1024, verbose_name='SCM Branch')),
                ('scm_revision', models.CharField(blank=True, default='', editable=False, help_text='The SCM Revision', max_length=1024, verbose_name='SCM Revision')),
                ('svc_enabled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('security', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('requirements', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('source', models.CharField(choices=[('', 'None'), ('bacula', 'Bacula'), ('spiderOaK', 'spiderOaK')], default='', max_length=20)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='backups', to='main.Credential')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BareMetal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('fqdn', models.CharField(blank=True, max_length=200)),
                ('model', models.CharField(blank=True, max_length=200)),
                ('sn', models.CharField(blank=True, help_text='Specifies the serial number of the device if exist', max_length=200, verbose_name='Serial Number')),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('primary_ip', models.CharField(blank=True, max_length=200)),
                ('primary_ip6', models.CharField(blank=True, max_length=200)),
                ('primary_mac', models.CharField(blank=True, max_length=200)),
                ('primary_domain', models.CharField(blank=True, max_length=200)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='baremetals', to='main.Credential')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Datacenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('site', models.CharField(blank=True, max_length=50)),
                ('location', models.CharField(blank=True, max_length=50)),
                ('facility', models.CharField(blank=True, max_length=50)),
                ('physical_address', models.CharField(blank=True, max_length=200)),
                ('shipping_address', models.CharField(blank=True, max_length=200)),
                ('contact_name', models.CharField(blank=True, max_length=50)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Contact E-mail')),
                ('comments', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Documentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('token', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=200)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('scm_type', models.CharField(blank=True, choices=[('', 'Manual'), ('git', 'Git'), ('hg', 'Mercurial'), ('svn', 'Subversion'), ('insights', 'Red Hat Insights')], default='', help_text='Specifies the source control system used to store the project.', max_length=8, verbose_name='SCM Type')),
                ('scm_url', models.CharField(blank=True, default='', editable=False, help_text='The SCM Source', max_length=1024, verbose_name='SCM Source')),
                ('scm_branch', models.CharField(blank=True, default='', editable=False, help_text='The SCM Branch', max_length=1024, verbose_name='SCM Branch')),
                ('scm_revision', models.CharField(blank=True, default='', editable=False, help_text='The SCM Revision', max_length=1024, verbose_name='SCM Revision')),
                ('svc_enabled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('security', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('requirements', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('source', models.CharField(choices=[('', 'None'), ('wiki', 'WIKI DOC'), ('readme', 'Markdown Doc')], default='', max_length=20)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documentations', to='main.Credential')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='documentations', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('family', models.PositiveSmallIntegerField(choices=[(4, 'IPv4'), (6, 'IPv6')], default=4)),
                ('address', awx.ipam.fields.IPAddressField(help_text='IPv4 or IPv6 address (with mask)')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Active'), (2, 'Reserved'), (3, 'Deprecated'), (5, 'DHCP')], default=1, help_text='The operational status of this IP', verbose_name='Status')),
                ('description', models.CharField(blank=True, max_length=100)),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ip_addresses', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['family', 'address'],
                'verbose_name': 'IP address',
                'verbose_name_plural': 'IP addresses',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('token', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=200)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('scm_type', models.CharField(blank=True, choices=[('', 'Manual'), ('git', 'Git'), ('hg', 'Mercurial'), ('svn', 'Subversion'), ('insights', 'Red Hat Insights')], default='', help_text='Specifies the source control system used to store the project.', max_length=8, verbose_name='SCM Type')),
                ('scm_url', models.CharField(blank=True, default='', editable=False, help_text='The SCM Source', max_length=1024, verbose_name='SCM Source')),
                ('scm_branch', models.CharField(blank=True, default='', editable=False, help_text='The SCM Branch', max_length=1024, verbose_name='SCM Branch')),
                ('scm_revision', models.CharField(blank=True, default='', editable=False, help_text='The SCM Revision', max_length=1024, verbose_name='SCM Revision')),
                ('svc_enabled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('security', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('requirements', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('source', models.CharField(choices=[('', 'None'), ('phyical', 'PHYSICAL'), ('bridge', 'VIRTUAL BRIDGE'), ('ovs', 'OpenvSwitch')], default='', max_length=20)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='networks', to='main.Credential')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='networks', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NetworkGear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('fqdn', models.CharField(blank=True, max_length=200)),
                ('model', models.CharField(blank=True, max_length=200)),
                ('sn', models.CharField(blank=True, help_text='Specifies the serial number of the device if exist', max_length=200, verbose_name='Serial Number')),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('primary_ip', models.CharField(blank=True, max_length=200)),
                ('primary_ip6', models.CharField(blank=True, max_length=200)),
                ('primary_mac', models.CharField(blank=True, max_length=200)),
                ('primary_domain', models.CharField(blank=True, max_length=200)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='networkgears', to='main.Credential')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='networkgears', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Noc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('token', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=200)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('scm_type', models.CharField(blank=True, choices=[('', 'Manual'), ('git', 'Git'), ('hg', 'Mercurial'), ('svn', 'Subversion'), ('insights', 'Red Hat Insights')], default='', help_text='Specifies the source control system used to store the project.', max_length=8, verbose_name='SCM Type')),
                ('scm_url', models.CharField(blank=True, default='', editable=False, help_text='The SCM Source', max_length=1024, verbose_name='SCM Source')),
                ('scm_branch', models.CharField(blank=True, default='', editable=False, help_text='The SCM Branch', max_length=1024, verbose_name='SCM Branch')),
                ('scm_revision', models.CharField(blank=True, default='', editable=False, help_text='The SCM Revision', max_length=1024, verbose_name='SCM Revision')),
                ('svc_enabled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('security', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('requirements', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('source', models.CharField(choices=[('', 'None'), ('nagios', 'Nagions POD'), ('centreon', 'Centreon'), ('librenms', 'LibreNMS'), ('elk', 'Elasticsearch Logstash Kibana')], default='', max_length=20)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nocs', to='main.Credential')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='nocs', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Pki',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('token', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=200)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('scm_type', models.CharField(blank=True, choices=[('', 'Manual'), ('git', 'Git'), ('hg', 'Mercurial'), ('svn', 'Subversion'), ('insights', 'Red Hat Insights')], default='', help_text='Specifies the source control system used to store the project.', max_length=8, verbose_name='SCM Type')),
                ('scm_url', models.CharField(blank=True, default='', editable=False, help_text='The SCM Source', max_length=1024, verbose_name='SCM Source')),
                ('scm_branch', models.CharField(blank=True, default='', editable=False, help_text='The SCM Branch', max_length=1024, verbose_name='SCM Branch')),
                ('scm_revision', models.CharField(blank=True, default='', editable=False, help_text='The SCM Revision', max_length=1024, verbose_name='SCM Revision')),
                ('svc_enabled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('security', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('requirements', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('source', models.CharField(choices=[('', 'None'), ('idm', 'Red Hat IDM'), ('freeipa', 'FreeIPA')], default='', max_length=20)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pkis', to='main.Credential')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pkis', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'PKI',
                'verbose_name_plural': 'PKIs',
            },
        ),
        migrations.CreateModel(
            name='Prefix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('family', models.PositiveSmallIntegerField(choices=[(4, 'IPv4'), (6, 'IPv6')], default=4)),
                ('prefix', awx.ipam.fields.IPNetworkField(help_text='IPv4 or IPv6 network with mask')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Container'), (1, 'Active'), (2, 'Reserved'), (3, 'Deprecated')], default=1, help_text='Operational status of this prefix', verbose_name='Status')),
                ('is_pool', models.BooleanField(default=False, help_text='All IP addresses within this prefix are considered usable', verbose_name='Is a pool')),
                ('description', models.CharField(blank=True, max_length=100)),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefixes', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['vrf', 'family', 'prefix'],
                'verbose_name_plural': 'prefixes',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('token', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=200)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('scm_type', models.CharField(blank=True, choices=[('', 'Manual'), ('git', 'Git'), ('hg', 'Mercurial'), ('svn', 'Subversion'), ('insights', 'Red Hat Insights')], default='', help_text='Specifies the source control system used to store the project.', max_length=8, verbose_name='SCM Type')),
                ('scm_url', models.CharField(blank=True, default='', editable=False, help_text='The SCM Source', max_length=1024, verbose_name='SCM Source')),
                ('scm_branch', models.CharField(blank=True, default='', editable=False, help_text='The SCM Branch', max_length=1024, verbose_name='SCM Branch')),
                ('scm_revision', models.CharField(blank=True, default='', editable=False, help_text='The SCM Revision', max_length=1024, verbose_name='SCM Revision')),
                ('svc_enabled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('security', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('requirements', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('source', models.CharField(choices=[('kvm', 'KVM'), ('rhev', 'RHEV'), ('', 'Cloud Providers'), ('dockerce', 'Docker Engine Community Edition'), ('vmware', 'VmWare/vCenter'), ('ocp', 'Origin/OpenShift Container Platform'), ('rh_ocp', 'Red Hat OpenShift Container Platform'), ('rh_osp', 'Red Hat OpenStack Platform'), ('kubernetes', 'kubernetes'), ('gce', 'Google Compute Engine'), ('azure', 'Microsoft Azure'), ('aws', 'Amazon EC2')], default='', max_length=20)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='providers', to='main.Credential')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='providers', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Registry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('fqdn', models.CharField(blank=True, max_length=200)),
                ('model', models.CharField(blank=True, max_length=200)),
                ('sn', models.CharField(blank=True, help_text='Specifies the serial number of the device if exist', max_length=200, verbose_name='Serial Number')),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('primary_ip', models.CharField(blank=True, max_length=200)),
                ('primary_ip6', models.CharField(blank=True, max_length=200)),
                ('primary_mac', models.CharField(blank=True, max_length=200)),
                ('primary_domain', models.CharField(blank=True, max_length=200)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrys', to='main.Credential')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrys', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Registry',
                'verbose_name_plural': 'Registries',
            },
        ),
        migrations.CreateModel(
            name='Rir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'RIR',
                'verbose_name_plural': 'RIRs',
            },
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('token', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=200)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('scm_type', models.CharField(blank=True, choices=[('', 'Manual'), ('git', 'Git'), ('hg', 'Mercurial'), ('svn', 'Subversion'), ('insights', 'Red Hat Insights')], default='', help_text='Specifies the source control system used to store the project.', max_length=8, verbose_name='SCM Type')),
                ('scm_url', models.CharField(blank=True, default='', editable=False, help_text='The SCM Source', max_length=1024, verbose_name='SCM Source')),
                ('scm_branch', models.CharField(blank=True, default='', editable=False, help_text='The SCM Branch', max_length=1024, verbose_name='SCM Branch')),
                ('scm_revision', models.CharField(blank=True, default='', editable=False, help_text='The SCM Revision', max_length=1024, verbose_name='SCM Revision')),
                ('svc_enabled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('security', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('requirements', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('source', models.CharField(choices=[('', 'None')], default='', max_length=20)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='securitys', to='main.Credential')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='securitys', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Security',
                'verbose_name_plural': 'Securities',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('token', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=200)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('scm_type', models.CharField(blank=True, choices=[('', 'Manual'), ('git', 'Git'), ('hg', 'Mercurial'), ('svn', 'Subversion'), ('insights', 'Red Hat Insights')], default='', help_text='Specifies the source control system used to store the project.', max_length=8, verbose_name='SCM Type')),
                ('scm_url', models.CharField(blank=True, default='', editable=False, help_text='The SCM Source', max_length=1024, verbose_name='SCM Source')),
                ('scm_branch', models.CharField(blank=True, default='', editable=False, help_text='The SCM Branch', max_length=1024, verbose_name='SCM Branch')),
                ('scm_revision', models.CharField(blank=True, default='', editable=False, help_text='The SCM Revision', max_length=1024, verbose_name='SCM Revision')),
                ('svc_enabled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('security', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('requirements', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('source', models.CharField(choices=[('', 'None'), ('rh_satellite6', 'Red Hat Satellite 6'), ('rh_ansible_tower', 'Red Hat Ansible Tower'), ('isc_dhcp', 'isc DHCP'), ('isc_dns', 'isc DNS'), ('rh_idm', 'Red Hat Identity Manager'), ('freeipa', 'FreeIPA'), ('gitlab', 'GitLab')], default='', max_length=20)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='main.Credential')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='services', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('token', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=200)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('scm_type', models.CharField(blank=True, choices=[('', 'Manual'), ('git', 'Git'), ('hg', 'Mercurial'), ('svn', 'Subversion'), ('insights', 'Red Hat Insights')], default='', help_text='Specifies the source control system used to store the project.', max_length=8, verbose_name='SCM Type')),
                ('scm_url', models.CharField(blank=True, default='', editable=False, help_text='The SCM Source', max_length=1024, verbose_name='SCM Source')),
                ('scm_branch', models.CharField(blank=True, default='', editable=False, help_text='The SCM Branch', max_length=1024, verbose_name='SCM Branch')),
                ('scm_revision', models.CharField(blank=True, default='', editable=False, help_text='The SCM Revision', max_length=1024, verbose_name='SCM Revision')),
                ('svc_enabled', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('security', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('requirements', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('source', models.CharField(choices=[('', 'Local'), ('nfs', 'NFS'), ('cifs', 'CIFS'), ('glusterfs', 'Gluster FS'), ('rh_glusterfs', 'Red Hat Gluster FS'), ('ceph', 'CEPH'), ('rh_ceph', 'Red Hat CEPH')], default='', max_length=20)),
                ('path', models.CharField(blank=True, max_length=100)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='storages', to='main.Credential')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='storages', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VirtualHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('fqdn', models.CharField(blank=True, max_length=200)),
                ('model', models.CharField(blank=True, max_length=200)),
                ('sn', models.CharField(blank=True, help_text='Specifies the serial number of the device if exist', max_length=200, verbose_name='Serial Number')),
                ('hosts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('artifacts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('opts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('primary_ip', models.CharField(blank=True, max_length=200)),
                ('primary_ip6', models.CharField(blank=True, max_length=200)),
                ('primary_mac', models.CharField(blank=True, max_length=200)),
                ('primary_domain', models.CharField(blank=True, max_length=200)),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='virtualhosts', to='main.Credential')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='virtualhosts', to='ipam.Datacenter')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='virtualhosts', to='ipam.Provider')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('vid', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4094)], verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Active'), (2, 'Reserved'), (3, 'Deprecated')], default=1, verbose_name='Status')),
                ('description', models.CharField(blank=True, max_length=100)),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vlans', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['datacenter', 'vid'],
                'verbose_name': 'VLAN',
                'verbose_name_plural': 'VLANs',
            },
        ),
        migrations.CreateModel(
            name='Vrf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('rd', models.CharField(max_length=21, verbose_name='Route distinguisher')),
                ('enforce_unique', models.BooleanField(default=True, help_text='Prevent duplicate prefixes/IP addresses within this VRF', verbose_name='Enforce unique space')),
                ('datacenter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vrfs', to='ipam.Datacenter')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'VRF',
                'verbose_name_plural': 'VRFs',
            },
        ),
        migrations.AddField(
            model_name='prefix',
            name='vlan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefixes', to='ipam.Vlan', verbose_name='VLAN'),
        ),
        migrations.AddField(
            model_name='prefix',
            name='vrf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefixes', to='ipam.Vrf', verbose_name='VRF'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='vrf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ip_addresses', to='ipam.Vrf', verbose_name='VRF'),
        ),
        migrations.AddField(
            model_name='baremetal',
            name='datacenter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='baremetals', to='ipam.Datacenter'),
        ),
        migrations.AddField(
            model_name='backup',
            name='datacenter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='backups', to='ipam.Datacenter'),
        ),
        migrations.AddField(
            model_name='app',
            name='datacenter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='apps', to='ipam.Datacenter'),
        ),
        migrations.AddField(
            model_name='aggregate',
            name='datacenter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='aggregates', to='ipam.Datacenter'),
        ),
        migrations.AddField(
            model_name='aggregate',
            name='rir',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='aggregates', to='ipam.Rir', verbose_name='RIR'),
        ),
    ]
